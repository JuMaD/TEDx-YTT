- round results from df.describe() to avoid data format challenges (., confusion)
    return described.round()     within calc_stats
    
- push file handling (open(yapi, r)) into with statement to ensure cleanup
   with open('yapi.txt') as file:
   yapi = file.read()
   
- re-write logging into decorator

def logging(function)
  def wrapper(*args, **kwargs):
    logging.info(f'Calling {function.__name__}() '
              f'with {args}, {kwargs}')
    result = function(*args, **kwargs)
    print(f'{function.__name__}() '
              f'returned {result!r}')
    return result
  return wrapper
  
@logging 

- combine load_data functions 

def load_data(filename, indizes):
    """
    Loads a csv into a dataframe with multi-index ['Date', 'ID']
    :param filename: Name of the csv file
    :param indizes: array of indizies
    :return: pandas dataframe containing the data with  multi-index ['Date', 'ID']
    """
    logging.info(f'Loading old data from {filename}')
    try:
        df = pd.read_csv(filename, sep=';', encoding='latin-1')
        df.set_index(indizes, inplace=True)
    except FileNotFoundError:
        logging.warning(f'File {filename} does not exist! Continuing without loading old data.')
        df = None

    logging.info(f'...done!')
    return df


old_df = load_data(f'{BASE_FILENAME}-output.csv', ['Date', 'ID'])
old_stats_df = load_data(f'{BASE_FILENAME}-statistics.csv', ['Date', 'Metric'])



